{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAGwB,SAAfC,EAAcC,EAAUC,GAEjB,OAAP,IAAIC,SAAQ,SAACC,EAASC,GAEO,IAA5BC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKe,IAAhBQ,EAAOC,SAASC,cAAc,SAEQF,EAAvCG,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAWmC,IATzC,IAAMC,EAAWL,SAASC,cAAc,uBAClCK,EAAUN,SAASC,cAAc,sBACjCM,EAAYP,SAASC,cAAc,wBAEnCO,EAAaC,SAASJ,EAASK,OAC/BC,EAAOF,SAASH,EAAQI,OACxBE,EAASH,SAASF,EAAUG,OAGzBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAIlCxB,EAHiBwB,EAAI,EACPL,EAAaK,EAAIF,GAG5BG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAGjD6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAKnDQ,EAAKuB,O","sources":["src/js/03-promises.js"],"sourcesContent":["// Підключаємо бібілотеку Notiflix\nimport Notiflix from 'notiflix';\n\n// Функція створення промісів\nfunction createPromise(position, delay) {\n  // Повертає проміс\n  return new Promise((resolve, reject) => {\n    // Умова квиконання чи відхилення промісу\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Знаходимо форму за класрм\nconst form = document.querySelector('.form');\n// Додаємо слухача подій на сабміт по наисканню кнопки\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const delayInp = document.querySelector('input[name=\"delay\"]');\n  const stepInp = document.querySelector('input[name=\"step\"]');\n  const amountInp = document.querySelector('input[name=\"amount\"]');\n\n  const firstDelay = parseInt(delayInp.value);\n  const step = parseInt(stepInp.value);\n  const amount = parseInt(amountInp.value);\n\n  // Цикл, що виводить повідомлення про проміси amount разів\n  for (let i = 0; i < amount; i += 1) {\n    const position = i + 1;\n    const delay = firstDelay + i * step;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n\n  form.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","delayInp","stepInp","amountInp","firstDelay","parseInt","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.482c291d.js.map"}